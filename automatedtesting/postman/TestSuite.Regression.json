{
	"info": {
		"_postman_id": "22293ec3-56e6-4d28-9410-11a3191aec97",
		"name": "Regression testing",
		"description": "This is my demo for Regression testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13323373"
	},
	"item": [
		{
			"name": "GET verification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/v1/employees",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"employees"
					]
				},
				"description": "The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response."
			},
			"response": []
		},
		{
			"name": "POST verification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create new employee complete!\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"salary\": \"{{salary}}\",\n    \"age\": {{age}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"create"
					]
				},
				"description": "This request uses tests to verify both the structure (existence and type of individual properties) and exact values of the response data.\n\nUse `pm.expect(subject)` to wrap test subjects, and [Chai](https://www.chaijs.com/api/bdd/) for assertions."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://dummy.restapiexample.com"
		},
		{
			"key": "name",
			"value": "Nghi Le",
			"type": "string"
		},
		{
			"key": "salary",
			"value": "200000",
			"type": "string"
		},
		{
			"key": "age",
			"value": "30",
			"type": "string"
		}
	]
}