name: Azure Pipelines

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main

# ToDo: Replace the agent pool name, if you are using Udacity Cloud lab. 
# Otherwise comment out the line below. 
pool: myAgent

variables:
  python.version: '3.9.17'
  # ToDo: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: 'myServiceConnection'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Environment name
  environmentName: 'test-vm'

stages:
- stage: Build
  jobs:
  - job: BuildInfrastructure
    steps:
    - script: |
        curl -LO https://releases.hashicorp.com/terraform/1.5.2/terraform_1.5.2_linux_amd64.zip
        unzip terraform_1.5.2_linux_amd64.zi
        sudo mv terraform /usr/local/bin/
      workingDirectory: $(projectRoot)
      displayName: 'Initial'
    # Install Terraform on the pipeline agent 
    - task: TerraformInstaller@0
      displayName: 'Terrafom installation'
      inputs:
        terraformVersion: '1.5.2'